(define (problem rcll-production-steps_task)
(:domain rcll-production-steps)
(:objects
	r1 r2 r3 - robot
	p10 - product
	silver_base_p10 grey_cap_p10 gate2_delivery_p10 - step
	p70 - product
	silver_base_p70 blue_ring_p70 orange_ring_p70 yellow_ring_p70 black_cap_p70 gate2_delivery_p70 - step
)
(:init
	(add-one zero one)
	(add-one one two)
	(add-one two three)
	(subtract three zero three)
	(subtract two zero two)
	(subtract one zero one)
	(subtract zero zero zero)
	(subtract three one two)
	(subtract two one one)
	(subtract one one zero)
	(subtract three two one)
	(subtract two two zero)
	(has-step p10 silver_base_p10)
	(has-step p10 grey_cap_p10)
	(has-step p10 gate2_delivery_p10)
	(initial-step silver_base_p10)
	(has-step p70 silver_base_p70)
	(has-step p70 blue_ring_p70)
	(has-step p70 orange_ring_p70)
	(has-step p70 yellow_ring_p70)
	(has-step p70 black_cap_p70)
	(has-step p70 gate2_delivery_p70)
	(initial-step silver_base_p70)
	(input-location cs1_in cs1)
	(input-location cs2_in cs2)
	(input-location rs1_in rs1)
	(input-location rs2_in rs2)
	(input-location ds_in ds)
	(output-location cs1_out cs1)
	(output-location cs2_out cs2)
	(output-location rs1_out rs1)
	(output-location rs2_out rs2)
	(output-location bs_out bs)
	(robot1-at-init)
    (robot1-precedes r2)
    (robot1-precedes r3)
    (robot2-precedes r3)
	(robot1-assigned-machine cs1)
	(robot1-assigned-machine rs1)
	(robot1-assigned-machine bs)
	;(robot2-assigned-machine cs2)
	;(robot2-assigned-machine rs2)
	;(robot2-assigned-machine bs)
	;(robot3-assigned-machine bs)
	(step-at-machine silver_base_p10 bs)
	(step-at-machine grey_cap_p10 cs1)
	(step-at-machine gate2_delivery_p10 ds)
	(step-precedes silver_base_p10 grey_cap_p10)
	(step-precedes grey_cap_p10 gate2_delivery_p10)
	(step-at-machine silver_base_p70 bs)
	(step-at-machine blue_ring_p70 rs2)
	(step-at-machine orange_ring_p70 rs2)
	(step-at-machine yellow_ring_p70 rs1)
	(step-at-machine black_cap_p70 cs2)
	(step-at-machine gate2_delivery_p70 ds)
	;(step-completed silver_base_p70)
	;(step-completed orange_ring_p70)
	(step-precedes silver_base_p70 blue_ring_p70)
	(step-precedes blue_ring_p70 orange_ring_p70)
	(step-precedes orange_ring_p70 yellow_ring_p70)
	(step-precedes yellow_ring_p70 black_cap_p70)
	(step-precedes black_cap_p70 gate2_delivery_p70)
	(material-required silver_base_p10 zero)
	(material-required grey_cap_p10 zero)
	(material-required gate2_delivery_p10 zero)
	(material-required blue_ring_p70 one)
	(material-required orange_ring_p70 zero)
	(material-required yellow_ring_p70 two)
	(material-required silver_base_p70 zero)
	(material-required black_cap_p70 zero)
	(material-required gate2_delivery_p70 zero)
	(material-stored rs2 zero)
	(material-stored rs1 zero)
	(material-stored cs2 zero)
	(material-stored cs1 zero)
	(material-stored ds zero)
	(material-stored bs zero)
	(= (path-length bs_in bs_out)     9)
	(= (path-length bs_in cs1_in)    56)
	(= (path-length bs_in cs1_out)   63)
	(= (path-length bs_in cs2_in)    50)
	(= (path-length bs_in cs2_out)   39)
	(= (path-length bs_in ds_in)     39)
	(= (path-length bs_in rs1_in)    19)
	(= (path-length bs_in rs1_out)   30)
	(= (path-length bs_in rs2_in)    21)
	(= (path-length bs_in rs2_out)   11)
	(= (path-length bs_out bs_in)     9)
	(= (path-length bs_out cs1_in)   61)
	(= (path-length bs_out cs1_out)  69)
	(= (path-length bs_out cs2_in)   55)
	(= (path-length bs_out cs2_out)  44)
	(= (path-length bs_out ds_in)    44)
	(= (path-length bs_out rs1_in)   24)
	(= (path-length bs_out rs1_out)  35)
	(= (path-length bs_out rs2_in)   28)
	(= (path-length bs_out rs2_out)  15)
	(= (path-length cs1_in bs_in)    56)
	(= (path-length cs1_in bs_out)   61)
	(= (path-length cs1_in cs1_out)  12)
	(= (path-length cs1_in cs2_in)   21)
	(= (path-length cs1_in cs2_out)  20)
	(= (path-length cs1_in ds_in)    26)
	(= (path-length cs1_in rs1_in)   41)
	(= (path-length cs1_in rs1_out)  31)
	(= (path-length cs1_in rs2_in)   47)
	(= (path-length cs1_in rs2_out)  58)
	(= (path-length cs1_out bs_in)   63)
	(= (path-length cs1_out bs_out)  69)
	(= (path-length cs1_out cs1_in)  12)
	(= (path-length cs1_out cs2_in)  21)
	(= (path-length cs1_out cs2_out) 29)
	(= (path-length cs1_out ds_in)   36)
	(= (path-length cs1_out rs1_in)  48)
	(= (path-length cs1_out rs1_out) 39)
	(= (path-length cs1_out rs2_in)  55)
	(= (path-length cs1_out rs2_out) 66)
	(= (path-length cs2_in bs_in)    50)
	(= (path-length cs2_in bs_out)   55)
	(= (path-length cs2_in cs1_in)   21)
	(= (path-length cs2_in cs1_out)  21)
	(= (path-length cs2_in cs2_out)  23)
	(= (path-length cs2_in ds_in)    32)
	(= (path-length cs2_in rs1_in)   35)
	(= (path-length cs2_in rs1_out)  35)
	(= (path-length cs2_in rs2_in)   51)
	(= (path-length cs2_in rs2_out)  59)
	(= (path-length cs2_out bs_in)   39)
	(= (path-length cs2_out bs_out)  44)
	(= (path-length cs2_out cs1_in)  20)
	(= (path-length cs2_out cs1_out) 29)
	(= (path-length cs2_out cs2_in)  23)
	(= (path-length cs2_out ds_in)   25)
	(= (path-length cs2_out rs1_in)  24)
	(= (path-length cs2_out rs1_out) 25)
	(= (path-length cs2_out rs2_in)  41)
	(= (path-length cs2_out rs2_out) 48)
	(= (path-length ds_in bs_in)     39)
	(= (path-length ds_in bs_out)    44)
	(= (path-length ds_in cs1_in)    26)
	(= (path-length ds_in cs1_out)   36)
	(= (path-length ds_in cs2_in)    32)
	(= (path-length ds_in cs2_out)   25)
	(= (path-length ds_in rs1_in)    25)
	(= (path-length ds_in rs1_out)   14)
	(= (path-length ds_in rs2_in)    29)
	(= (path-length ds_in rs2_out)   40)
	(= (path-length rs1_in bs_in)    19)
	(= (path-length rs1_in bs_out)   24)
	(= (path-length rs1_in cs1_in)   41)
	(= (path-length rs1_in cs1_out)  48)
	(= (path-length rs1_in cs2_in)   35)
	(= (path-length rs1_in cs2_out)  24)
	(= (path-length rs1_in ds_in)    25)
	(= (path-length rs1_in rs1_out)  26)
	(= (path-length rs1_in rs2_in)   32)
	(= (path-length rs1_in rs2_out)  28)
	(= (path-length rs1_out bs_in)   30)
	(= (path-length rs1_out bs_out)  35)
	(= (path-length rs1_out cs1_in)  31)
	(= (path-length rs1_out cs1_out) 39)
	(= (path-length rs1_out cs2_in)  35)
	(= (path-length rs1_out cs2_out) 25)
	(= (path-length rs1_out ds_in)   14)
	(= (path-length rs1_out rs1_in)  26)
	(= (path-length rs1_out rs2_in)  20)
	(= (path-length rs1_out rs2_out) 32)
	(= (path-length rs2_in bs_in)    21)
	(= (path-length rs2_in bs_out)   28)
	(= (path-length rs2_in cs1_in)   47)
	(= (path-length rs2_in cs1_out)  55)
	(= (path-length rs2_in cs2_in)   51)
	(= (path-length rs2_in cs2_out)  41)
	(= (path-length rs2_in ds_in)    29)
	(= (path-length rs2_in rs1_in)   32)
	(= (path-length rs2_in rs1_out)  20)
	(= (path-length rs2_in rs2_out)  14)
	(= (path-length rs2_out bs_in)   11)
	(= (path-length rs2_out bs_out)  15)
	(= (path-length rs2_out cs1_in)  58)
	(= (path-length rs2_out cs1_out) 66)
	(= (path-length rs2_out cs2_in)  59)
	(= (path-length rs2_out cs2_out) 48)
	(= (path-length rs2_out ds_in)   40)
	(= (path-length rs2_out rs1_in)  28)
	(= (path-length rs2_out rs1_out) 32)
	(= (path-length rs2_out rs2_in)  14)
	(= (path-length start bs_in)      7)
	(= (path-length start bs_out)    12)
	(= (path-length start cs1_in)    53)
	(= (path-length start cs1_out)   61)
	(= (path-length start cs2_in)    47)
	(= (path-length start cs2_out)   36)
	(= (path-length start ds_in)     36)
	(= (path-length start rs1_in)    16)
	(= (path-length start rs1_out)   27)
	(= (path-length start rs2_in)    26)
	(= (path-length start rs2_out)   16)
	(= (path-length bs_in   start)    7)
	(= (path-length bs_out  start)   12)
	(= (path-length cs1_in  start)   53)
	(= (path-length cs1_out start)   61)
	(= (path-length cs2_in  start)   47)
	(= (path-length cs2_out start)   36)
	(= (path-length ds_in   start)   36)
	(= (path-length rs1_in  start)   16)
	(= (path-length rs1_out start)   27)
	(= (path-length rs2_in  start)   26)
	(= (path-length rs2_out start)   16)

	(= (path-length bs_in bs_in) 0)
	(= (path-length bs_out bs_out) 0)
	(= (path-length cs1_in cs1_in) 0)
	(= (path-length cs1_out cs1_out) 0)
	(= (path-length cs2_in cs2_in) 0)
	(= (path-length cs2_out cs2_out) 0)
	(= (path-length ds_in ds_in) 0)
	(= (path-length rs1_in rs1_in) 0)
	(= (path-length rs1_out rs1_out) 0)
	(= (path-length rs2_in rs2_in) 0)
	(= (path-length rs2_out rs2_out) 0)
	(= (path-length start start) 0)

	(= (total-cost) 0)
)
(:goal (and
	;(step-completed silver_base_p10)
	(step-completed grey_cap_p10)
	;(step-completed gate2_delivery_p10)
	;(step-completed silver_base_p70)
	(step-completed blue_ring_p70)
	;(step-completed orange_ring_p70)
	;(step-completed yellow_ring_p70)
	;(step-completed black_cap_p70)
	;(step-completed gate2_delivery_p70)
	;(cap-buffered cs1)
	;(cap-buffered cs2)
	;(robot-at r1 bs_in)
	;(robot-holding-product r1 p70)
	;(robot-holding-material r1)
	;(not (material-at cs2_out))
	;(not (material-at cs1_out))
))

(:metric minimize (total-cost))
)
